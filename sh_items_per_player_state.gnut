global function ShItemPerPlayerState_LevelInit









global function ServerToClient_OnItemFlavorNewnessChanged
















global function Newness_TEMP_MarkItemAsNewAndInformServer








const int NUM_NEW_ITEM_FLAVORS_TO_PERSIST = 80


typedef OnNewnessReverseQueryUpdatedCallbackType void functionref( int newCount, var optionalArg )
global struct OnNewnessReverseQueryUpdatedCallbackStruct
{
	OnNewnessReverseQueryUpdatedCallbackType cb
	var                                      optionalArg = null
}

global struct Newness_ReverseQuery
{
	
	array<Newness_ReverseQuery> queryDependencies
	array<ItemFlavor>           itemFlavDependencies

	
	bool                                              isSetUp = false
	array<Newness_ReverseQuery>                       dependentsList
	int                                               newCount
	array<OnNewnessReverseQueryUpdatedCallbackStruct> onChangeCallbackList
}








struct FileStruct_LifetimeLevel
{




}
FileStruct_LifetimeLevel& fileLevel








void function ShItemPerPlayerState_LevelInit()
{
	FileStruct_LifetimeLevel newFileLevel
	fileLevel = newFileLevel












		Remote_RegisterClientFunction( "ServerToClient_OnItemFlavorNewnessChanged", "int", -INT_MAX, INT_MAX, "bool" )

}














































































































































































void function Newness_TEMP_MarkItemAsNewAndInformServer( ItemFlavor flavor )
{
	Assert( IsItemFlavorStructValid( flavor.guid, eValidation.ASSERT ) )

	
	SettingsAssetGUID guid = ItemFlavor_GetGUID( flavor )

	Remote_ServerCallFunction( "ClientCallback_temp_newness_mark", guid )
}




















































































































































































































































void function ServerToClient_OnItemFlavorNewnessChanged( int guid, bool isNew )
{
	RunUIScript( "ClientToUI_OnItemFlavorNewnessChanged", guid, isNew )
}

















































































