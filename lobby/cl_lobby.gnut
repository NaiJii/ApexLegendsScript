global function Lobby_AddLocalPlayer
global function AddCallback_OnPlayerAddedToLobby
global function Lobby_SetBannerSkin
#if DEV
global function DEV_SetLobbyBannerSkin
#endif

global function Lobby_OnReadyFX


const int LOBBY_BANNER_DEFAULT_SKIN_INDEX = 0
const int LOBBY_BANNER_MIXTAPE_SKIN_INDEX = 1
const int LOBBY_BANNER_LTM_SKIN_INDEX = 2

const int LOBBY_EVENT1_SKIN_OFFSET = 3
const int LOBBY_EVENT2_SKIN_OFFSET = 6

const asset GH_READY_UP_RING_EFFECT = $"P_env_lobby_s19_readyup_ring"
const asset GH_READY_UP_YELLOW_EFFECT = $"P_env_lobby_s19_readyup_yellow"

const float READY_UP_FX_COOLDOWN = 5.0

struct
{
	array<void functionref( entity )> onPlayerAddedToLobbyCallbacks

	array<entity> lobbyBanners
	array<entity> lobbyBases
#if DEV
		bool overrideLobbyBanner = false
#endif


	float readyUpCooldown = 0
	array< entity > ringEffects
	array< entity > lightEffects
} file

void function Lobby_AddLocalPlayer()
{
	entity player = GetLocalClientPlayer()
	Assert( IsValid( player ) )

	player.FreezeControlsOnClient()
	player.HideCrosshairNames()

	SetStandardAbilityBindingsForPilot( player )
	RefreshPresentationType()


	
	
	
	RunUIScript( "Lobby_EnableMinimapCoordsOnConnect", player.GetPlayerName() )


	foreach ( func in file.onPlayerAddedToLobbyCallbacks )
		func( player )

	CacheLobbyBannerEnt()
	SetupEventProps()
	SetupEventBase()

	RunUIScript( "MaybeSendPINSettingsEvent" )
}

void function AddCallback_OnPlayerAddedToLobby( void functionref( entity ) onPlayerAddedToLobbyCallback )
{
	Assert( ! ( file.onPlayerAddedToLobbyCallbacks.contains( onPlayerAddedToLobbyCallback ) ), "Attempted to add same callback to onPlayerAddedToLobbyCallbacks twice." )

	file.onPlayerAddedToLobbyCallbacks.append( onPlayerAddedToLobbyCallback )
}

void function CacheLobbyBannerEnt()
{
	file.lobbyBanners = GetEntArrayByScriptName( "lobby_banner" )
	file.lobbyBases = GetEntArrayByScriptName( "lobby_base" )

	if ( IsLobbyEvent1Active() )
	{
		PrecacheParticleSystem( GH_READY_UP_RING_EFFECT )
		PrecacheParticleSystem( GH_READY_UP_YELLOW_EFFECT )
		file.ringEffects = GetEntArrayByScriptName( "event_ring_effect" )
		file.lightEffects = GetEntArrayByScriptName( "event_light_effect" )
	}

	if ( IsLobbyEvent2Active() )
	{

	}
}

void function Lobby_OnReadyFX( bool isReady )
{
	if ( IsLobbyEvent1Active() )
	{
		if ( !isReady )
			return

		float now = ClientTime()

		if ( now < (file.readyUpCooldown + READY_UP_FX_COOLDOWN))
			return

		file.readyUpCooldown = now

		thread Event1ReadyFX()
	}
	else if ( IsLobbyEvent2Active()  )
	{

	}
}

void function Event1ReadyFX()
{
	foreach ( ringEffect in file.ringEffects )
		StartParticleEffectInWorld( GetParticleSystemIndex ( GH_READY_UP_RING_EFFECT ) , ringEffect.GetOrigin(),  ringEffect.GetAngles() )

	foreach ( lightEffect in file.lightEffects )
		StartParticleEffectInWorld( GetParticleSystemIndex ( GH_READY_UP_YELLOW_EFFECT ) , lightEffect.GetOrigin(),  lightEffect.GetAngles() )
}

void function Lobby_SetBannerSkin( string playlist )
{
	if( file.lobbyBanners.len() == 0 )
	{
		
		CacheLobbyBannerEnt()

		if( file.lobbyBanners.len() == 0 )
		{
			Warning( "Lobby_SetBannerSkin - No lobby_banner entity found!" )
			return
		}
	}

	string playlistName = GetParty().playlistName
	int skinIndex =  LOBBY_BANNER_DEFAULT_SKIN_INDEX

	if ( GetPlaylistVarBool( playlistName, "is_limited_mode", false ) )
		skinIndex =  LOBBY_BANNER_LTM_SKIN_INDEX
	else if ( GetPlaylistVarString( playlistName, "ui_slot", "" ) == "mixtape" )
		skinIndex =  LOBBY_BANNER_MIXTAPE_SKIN_INDEX

#if DEV
		if ( file.overrideLobbyBanner )
			return
#endif

	if ( IsLobbyEvent1Active() )
	{
		skinIndex = skinIndex + LOBBY_EVENT1_SKIN_OFFSET
	}

	if ( IsLobbyEvent2Active() )
	{
		skinIndex = skinIndex + LOBBY_EVENT2_SKIN_OFFSET
	}

	Lobby_SetBannerSkinInternal ( skinIndex )
}

void function Lobby_SetBannerSkinInternal( int skinIndex )
{
	foreach ( lobbyBanner in file.lobbyBanners )
	{
		if ( IsValid(lobbyBanner) )
			lobbyBanner.SetSkin( skinIndex )
	}
}

#if DEV
void function DEV_SetLobbyBannerSkin( int i )
{
	if ( i == -1 )
	{
		file.overrideLobbyBanner = false
		return
	}

	Lobby_SetBannerSkinInternal( i )
	file.overrideLobbyBanner = true
}
#endif

void function SetupEventBase()
{
	int skinId = 0

	if ( IsLobbyEvent1Active() )
		skinId = 1

	if ( IsLobbyEvent2Active() )
		skinId = 2

	if ( skinId == 0 )
		return

	foreach ( lobbyBase in file.lobbyBases )
	{
		if ( IsValid( lobbyBase ) )
		{
			lobbyBase.SetSkin(skinId )
		}
	}
}

void function SetupEventProps()
{
	SetupEvent1Props()
	SetupEvent2Props()
}

void function SetupEvent1Props()
{
	if ( !IsLobbyEvent1Active() )
	{
		array<entity> event_props = GetEntArrayByScriptName( "event_1_prop" )
		foreach ( event_prop in event_props )
		{
			if ( IsValid( event_prop ) )
				event_prop.Destroy()
		}

		return
	}

	
	





}

void function SetupEvent2Props()
{
	if ( !IsLobbyEvent2Active() )
	{
		array<entity> event_props = GetEntArrayByScriptName( "event_2_prop" )
		foreach ( event_prop in event_props )
		{
			if ( IsValid( event_prop ) )
				event_prop.Destroy()
		}

		return
	}

	
	






}
