global function TreasureBox_SharedInit
global function TreasureBox_PlayerCanPickUpItem


global function TreasureBox_GetCooldownDesc
global function TreasureBox_SecondsUntilNextPickup



void function TreasureBox_SharedInit()
{












}







































































string function TreasureBox_GetCooldownDesc( entity player, ItemFlavor quest )
{
	int delta = maxint( 0, TreasureBox_SecondsUntilNextPickup( player, quest ) )
	int hours = (delta / SECONDS_PER_HOUR)
	int minutes = ((delta - (hours * SECONDS_PER_HOUR)) / SECONDS_PER_MINUTE)
	int seconds = (delta - (hours * SECONDS_PER_HOUR) - (minutes * SECONDS_PER_MINUTE))

	return Localize( "#TREASUREBOX_COOLDOWN_HINT", hours, minutes, seconds )
}




































































int function GetSeasonDayForUnixTime( int time, ItemFlavor season )
{
	int seasonStartTime = CalEvent_GetStartUnixTime( season )
	return ((time - seasonStartTime) / SECONDS_PER_DAY)
}
int function GetUnixTimeForSeasonDay( int dayIndex, ItemFlavor season )
{
	int seasonStartTime = CalEvent_GetStartUnixTime( season )
	return (seasonStartTime + dayIndex * SECONDS_PER_DAY)
}

int function SecondsUntilNextPickup_( entity player, ItemFlavor quest )
{
	int timeNow = GetUnixTimestamp()
	ItemFlavor ornull seasonNow = GetActiveSeason( timeNow )
	if ( seasonNow == null )
		return INT_MAX

	expect ItemFlavor( seasonNow )

	if ( SeasonQuest_AllTreasurePacksHaveBeenCollectedForPlayer( player, quest ) )
		return INT_MAX

	int lastPickupUT = SeasonQuest_GetTreasurePacksLatestPickupTimeForPlayer( player, quest )

	
	int seasonDayOfLatestPickup = GetSeasonDayForUnixTime( lastPickupUT, seasonNow )
	int seasonDayNow = GetSeasonDayForUnixTime( timeNow, seasonNow )
	if ( seasonDayOfLatestPickup < seasonDayNow )
		return 0

	
	if ( GetActiveSeason( lastPickupUT + SECONDS_PER_DAY ) != seasonNow )
		return INT_MAX

	
	int nextDayStart = GetUnixTimeForSeasonDay( (seasonDayOfLatestPickup + 1), seasonNow )
	return (nextDayStart - timeNow)
}












int function TreasureBox_SecondsUntilNextPickup( entity player, ItemFlavor quest )
{

















	int result = SecondsUntilNextPickup_( player, quest )









	return result
}

bool function TreasureBox_PlayerCanPickUpItem( entity player )
{
	ItemFlavor ornull quest = SeasonQuest_GetActiveSeasonQuest( GetUnixTimestamp() )
	if ( quest == null )
		return false
	expect ItemFlavor( quest )

	int delta = TreasureBox_SecondsUntilNextPickup( player, quest )
	return (delta <= 0)
}


