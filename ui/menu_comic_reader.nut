
global function UIToClient_LoadPanelImages
global function UIToClient_ReleaseAllLoadedPakHandles
global function UIToClient_SetPanelImage
global function ClInitComicReaderMenu















































































































struct
{









































		
		table<int, PakHandle> pakHandles


} file


void function ClInitComicReaderMenu()
{
	RegisterSignal( "LoadPanelTitle" )
	RegisterSignal( "StopWaitingForPakLoad" )
}










































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































void function UIToClient_LoadPanelImages( int panelIndex, asset panelImage, asset prevImage, asset nextImage, int panelsBeforeToKeepLoaded, int panelsAfterToKeepLoaded )
{
	array<asset> images = [prevImage, panelImage, nextImage]
	for ( int i = 0; i < 3; i++ )
	{
		if ( images[i] == $"" )
			continue    

		int pakIndex = panelIndex + (i - 1)
		if ( pakIndex in file.pakHandles )
			continue 

		string rpak         = PanelImage_GetRPakName( images[ i ] )
		PakHandle pakHandle = RequestPakFile( rpak, TRACK_FEATURE_UI )
		file.pakHandles[pakIndex] <- pakHandle
		printt( "#PAK - request", pakIndex )
	}

	
	foreach ( int index, pakHandle in clone file.pakHandles )
	{
		bool outOfRange = (index < panelIndex - panelsBeforeToKeepLoaded || index > panelIndex + panelsAfterToKeepLoaded)
		if ( outOfRange )
		{
			
			printt( "#PAK - release", index )
			Signal( pakHandle, "StopWaitingForPakLoad" )
			ReleasePakFile( pakHandle )
			delete file.pakHandles[index]
		}
	}
#if DEV
	string pakString = "#PAK - Panels: ["

	foreach ( int index, pakHandle in file.pakHandles )
	{
		pakString += (index + ", ")
	}
	string finalPakString = pakString.slice(0, pakString.len() - 2) + "]"
	printt( finalPakString )
#endif
}

string function PanelImage_GetRPakName( asset imageAsset )
{
	array<string> assetStrParts = split( string(imageAsset), "/" )
	Assert( assetStrParts.len() == 2 ) 
	Assert( assetStrParts[0] == "comic" )
	Assert( assetStrParts[1].find( "comic_" ) == 0 )
	return assetStrParts[1]
}

void function UIToClient_SetPanelImage( var panelElement, int panelIndex, asset panelImage )
{
	
	if( panelIndex in file.pakHandles )
	{

		Signal( file.pakHandles[panelIndex], "StopWaitingForPakLoad" )


		thread function() : ( panelElement, panelIndex, panelImage )
		{
			EndSignal( file.pakHandles[panelIndex], "PakHandleReleased" )
			EndSignal( file.pakHandles[panelIndex], "StopWaitingForPakLoad" )

			table e
			e.done <- false
			OnThreadEnd(
				function() : ( e, panelIndex )
				{
					printt( "#PAK - SetPanelEnded", e.done ? "gracefully" : "abruptly", panelIndex )
				}
			)

			if ( !file.pakHandles[panelIndex].isAvailable )
			{
				printt( "#PAK Wait for PAK", panelIndex, panelElement )
				RuiSetBool( Hud_GetRui( panelElement ), "panelImageIsReady", false )
				WaitSignal( file.pakHandles[panelIndex], "PakFileLoaded" )
			}

			printt( "#PAK - set image", panelIndex, panelElement )
			RuiSetImage( Hud_GetRui( panelElement ), "panelImage", panelImage )
			RuiSetBool( Hud_GetRui( panelElement ), "panelImageIsReady", true )
			e.done = true
		}()
	}
}


void function UIToClient_ReleaseAllLoadedPakHandles()
{
	
	array<PakHandle> unloadedHandles
	foreach ( int panelIndex, pakHandle in file.pakHandles )
	{
		if ( unloadedHandles.contains( pakHandle ) )
			continue
		else
			unloadedHandles.append( pakHandle )

		printt( "#PAK - total release ", panelIndex )
		Signal( pakHandle, "StopWaitingForPakLoad" )
		ReleasePakFile( pakHandle )
	}
	file.pakHandles.clear()
}



























































































































































































































































