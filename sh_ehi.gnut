


























global function ToEHI
global function FromEHI
global function EHIToEncodedEHandle
global function EncodedEHandleToEHI
global function EHIHasValidScriptStruct
global function GetEHIScriptStruct
global function GetEHIScriptStructFromEncodedEHandle
global function GetEHISignalDummy
global function WaitForEHISignalDummy
global function EHI_IsConnected
global function EHI_GetName
global function EEH_GetTeam
global function EHI_GetTeam
global function EEH_GetTeamMemberIndex
global function EHI_GetTeamMemberIndex
global function GetPlayerEHIArrayOfTeam
global function GetPlayerSquadSafe
global function EEHHasValidScriptStruct




global function IsLocalClientEHIValid
global function LocalClientEHI
global function WaitForLocalClientEHI
global function EHI_GetPlatformID




global function ShEHI_LevelInit_Begin
global function ShEHI_LevelInit_End























global function ClientToUI_OnPlayerCreatedOrUpdated
















struct FileStruct_LifetimeLevel
{
	table<EncodedEHandle, EHIScriptStruct> eehScriptStructMap = {}


		EHI                   localClientEHI = EHI_null
		table<string, string> obfuscatedNameMap






	table signalDummy
}




FileStruct_LifetimeLevel& fileLevel










void function ShEHI_LevelInit_Begin()
{

		RegisterSignal( "OnLocalClientEHIValid" )
		RegisterSignal( "EHISignalDummyCreated" )



	FileStruct_LifetimeLevel newFileLevel
	fileLevel = newFileLevel

	if ( !(uiGlobal.uiShutdownCallbacks.contains( ShEHI_VMShutdown )) )
		AddUICallback_UIShutdown( ShEHI_VMShutdown )





}




void function ShEHI_LevelInit_End()
{

		if ( CanRunClientScript() )
			RunClientScript( "UIToClient_UIVMJustStarted" )

}




void function ShEHI_VMShutdown()
{
	if ( CanRunClientScript() )
		RunClientScript( "UIToClient_UIVMIsShuttingDown" )
}










EHI function ToEHI( entity ent )
{








		Assert( ent == GetLocalClientPlayer() )
		Assert( fileLevel.localClientEHI != EHI_null )
		return fileLevel.localClientEHI

}




entity function FromEHI( EHI ent )
{








		Assert( fileLevel.localClientEHI != EHI_null )
		Assert( ent == fileLevel.localClientEHI )
		return GetLocalClientPlayer()

}




EncodedEHandle function EHIToEncodedEHandle( EHI ent )
{





		return ent

}




EHI function EncodedEHandleToEHI( EncodedEHandle eeh )
{



		return eeh

}




bool function EHIHasValidScriptStruct( EHI ent )
{
	
	




		return (ent != EHI_null && ent in fileLevel.eehScriptStructMap)

}




EHIScriptStruct function GetEHIScriptStruct( EHI ent )
{




		Assert( ent != EHI_null )
		return fileLevel.eehScriptStructMap[ent]

}




bool function EEHHasValidScriptStruct( EncodedEHandle ent )
{
	return (ent != EncodedEHandle_null && ent in fileLevel.eehScriptStructMap)
}




EHIScriptStruct function GetEHIScriptStructFromEncodedEHandle( EncodedEHandle ent )
{
	Assert( ent != EncodedEHandle_null )
	return fileLevel.eehScriptStructMap[ent]
}




EHISignalDummy function GetEHISignalDummy( EHI ent )
{




		Assert( ent != EHI_null )
		return fileLevel.eehScriptStructMap[ent]

}




EHISignalDummy function WaitForEHISignalDummy( EHI ent )
{




		Assert( ent != EHI_null )

		while ( !(ent in fileLevel.eehScriptStructMap) )
			WaitSignal( fileLevel.signalDummy, "EHISignalDummyCreated" )

		return fileLevel.eehScriptStructMap[ent]

}




bool function EHI_IsConnected( EHI ent )
{




		Assert( ent != EHI_null )
		return GetEHIScriptStruct( ent ).isConnected

}




string function EHI_GetName( EHI ent )
{




		Assert( ent != EHI_null )
		return GetEHIScriptStruct( ent ).name

}




int function EEH_GetTeam( EncodedEHandle ent )
{
	Assert( ent != EncodedEHandle_null )
	return GetEHIScriptStructFromEncodedEHandle( ent ).team
}




int function EHI_GetTeam( EHI ent )
{




		Assert( ent != EHI_null )
		return GetEHIScriptStruct( ent ).team

}




int function EEH_GetTeamMemberIndex( EncodedEHandle ent )
{
	Assert( ent != EncodedEHandle_null )
	return GetEHIScriptStructFromEncodedEHandle( ent ).teamMemberIndex
}




int function EHI_GetTeamMemberIndex( EHI ent )
{




		Assert( ent != EHI_null )
		return GetEHIScriptStruct( ent ).teamMemberIndex

}



int function EHI_GetRankScore( EHI ent )
{




		Assert( ent != EHI_null )
		return GetEHIScriptStruct( ent ).rankScore

}



int function EHI_GetRankedLadderPos( EHI ent )
{




		Assert( ent != EHI_null )
		return GetEHIScriptStruct( ent ).rankedLadderPosition

}



int function EHI_GetRankScorePrevSeason( EHI ent )
{




		Assert( ent != EHI_null )
		return GetEHIScriptStruct( ent ).rankScorePrevSeason

}



int function EHI_GetRankedLadderPosPrevSeason( EHI ent )
{




		Assert( ent != EHI_null )
		return GetEHIScriptStruct( ent ).rankedLadderPositionPrevSeason

}

































array<EHI> function GetPlayerEHIArrayOfTeam( int team )
{



		array<EHI> out = []
		foreach ( EHI ehi, EHIScriptStruct ehiss in fileLevel.eehScriptStructMap )
		{
			if ( !ehiss.isPlayer )
				continue

			if ( ehiss.team != team )
				continue

			out.append( ehi )
		}
		return out

}




int function EHI_GetPlatformID( EHI ent )
{




		Assert( ent != EHI_null )
		return GetEHIScriptStruct( ent ).platformID

}




array<EncodedEHandle> function GetPlayerSquadSafe( EncodedEHandle playerEEH, int squadSize )
{
	array<EncodedEHandle> out = [playerEEH] 
	if ( EEHHasValidScriptStruct( playerEEH ) )
	{
		int team = GetEHIScriptStructFromEncodedEHandle( playerEEH ).team
		foreach ( EncodedEHandle eeh, EHIScriptStruct ehiss in fileLevel.eehScriptStructMap )
		{
			if ( !ehiss.isPlayer )
				continue

			if ( ehiss.team != team )
				continue

			if ( eeh == playerEEH )
				continue

			out.append( eeh )
		}
	}
	out.resize( squadSize, EncodedEHandle_null )
	return out
}




bool function IsLocalClientEHIValid()
{
	return (fileLevel.localClientEHI != EHI_null)
}




EHI function LocalClientEHI()
{



		Assert( fileLevel.localClientEHI != EHI_null, "LocalClientEHI called too early. The UI VM hasn't been told about the local player yet." )

	return fileLevel.localClientEHI
}




EHI function WaitForLocalClientEHI()
{
	while ( !IsValidSignal( "OnLocalClientEHIValid" ) )
		WaitFrame()

	while ( fileLevel.localClientEHI == EHI_null )
	{



			WaitSignal( uiGlobal.signalDummy, "OnLocalClientEHIValid" )

	}
	return fileLevel.localClientEHI
}





























































































void function ClientToUI_OnPlayerCreatedOrUpdated( EHI ehi,
bool isLocalClientPlayer,
bool isConnected,
string name,
int team,
int teamMemberIndex,
int intValue
)
{
	EHIScriptStruct ehiss
	if ( ehi in fileLevel.eehScriptStructMap )
		ehiss = fileLevel.eehScriptStructMap[ehi]
	else
		fileLevel.eehScriptStructMap[ehi] <- ehiss

	ehiss.isPlayer = true
	ehiss.isConnected = isConnected
	ehiss.isLocalClientPlayer = isLocalClientPlayer
	ehiss.name = name
	ehiss.team = team
	ehiss.teamMemberIndex = teamMemberIndex
	ehiss.platformID = intValue

	if ( isLocalClientPlayer )
	{
		fileLevel.localClientEHI = ehi
		Signal( uiGlobal.signalDummy, "OnLocalClientEHIValid" )
	}

	Signal( fileLevel.signalDummy, "EHISignalDummyCreated" )

	
	ShLoadouts_OnPlayerEHICreated( ehi )
}





















































































































































































































































































































































