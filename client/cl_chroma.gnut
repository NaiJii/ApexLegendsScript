global function CLChroma_Init

global function Chroma_MainMenu
global function Chroma_Lobby
global function Chroma_LootCeremonyStart
global function Chroma_StartMatchmaking

































































struct
{
	int    zoneId = -1
	string chromaZoneBackgroundName
	string chromaBackgroundName
	bool   phaseShifted
	bool   outsideRing
	bool   bannerTransitionActive
	bool   inCharacterSelect
	bool   respawning
	bool   victory
	bool   huntMode
	array  signalEnt

	int logoHandle = -1

	int healthOverlayHandle = -1
	int consumableOverlayHandle = -1

	int gasCloudOverlayHandle = -1
	int smokescreenOverlayHandle = -1
	int healDroneOverlayHandle = -1
	int stimOverlayHandle = -1
	int ziplineOverlayHandle = -1

	vector[3] lootCeremonyColors
} file

void function CLChroma_Init()
{
	
	

	RegisterSignal( "skydiveover" )










}





























































const table< float, vector > redFlagGradient =
{
	[0.0] = <1.0, .17, .1>,
	[1.0] = <0.3, 0.0, 0.0>,
}


void function Chroma_MainMenu()
{
	Chroma_SetBaseLayer( CHROMALOOP_SOFTRIPPLES, CHROMATRANS_FLAGS, redFlagGradient, 2.0 )
	
}


void function Chroma_RemoveLogo()
{
	
	
}


void function Chroma_Lobby()
{
	
	Chroma_RemoveLogo()
	Chroma_SetBaseLayer( CHROMALOOP_SMOKE, CHROMATRANS_FLAGS, {[1.0] = <.25, 0, 0>, [0.5] = <.2, .6, 1>, [0.0] = <1, 1, 1>}, 2.0, 0.5 )
}


void function Chroma_LootCeremonyStart()
{
	Chroma_SetBaseLayer( CHROMALOOP_SMOKE, CHROMATRANS_SMOKE, {[0.0] = <0, 0, 0>}, 2.0 )
	foreach ( idx, color in file.lootCeremonyColors )
		file.lootCeremonyColors[idx] = <0, 0, 0>
}


void function Chroma_StartMatchmaking()
{
	Chroma_AddOverlay( CHROMALOOP_SMOOTHNOISE, CHROMAWAVE_FLASH, {[0.0] = <1, 0, 0>}, 3.0 )
}





























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































